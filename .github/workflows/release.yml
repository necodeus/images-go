name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.21.12"

      - name: Check out code
        uses: actions/checkout@v3

      - name: Build binary
        run: |
          mkdir -p build
          binary_name="myapp-windows-amd64.exe"
          GOOS=windows GOARCH=amd64 go build -o ./build/${binary_name}
        env:
          CGO_ENABLED: 0

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: myapp-windows-amd64
          path: ./build/myapp-windows-amd64.exe

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./build

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Get Latest Release Upload URL
        id: get_upload_url
        run: |
          UPLOAD_URL=$(curl -H "Authorization: token ${{ secrets.PAT }}" \
              https://api.github.com/repos/${{ github.repository }}/releases/latest \
              | jq -r '.upload_url' | sed -e "s/{?name,label}//")
          echo "UPLOAD_URL=${UPLOAD_URL}" >> $GITHUB_ENV
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ env.UPLOAD_URL }}?name=myapp-windows-amd64.exe
          asset_path: ./build/myapp-windows-amd64.exe
          asset_name: myapp-windows-amd64.exe
          asset_content_type: application/octet-stream