name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, windows]
        arch: [amd64, arm64]
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.21.12"

      - name: Build
        run: |
          mkdir -p build
          CGO_ENABLED=0 GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o ./build/images-${{ matrix.os }}-${{ matrix.arch }}
          cp .env.example ./build/.env
          cp -r errors ./build/errors
          cp init.sql ./build/init.sql

      - name: Create tar archive
        run: |
          tar -czvf ./build/images-${{ matrix.os }}-${{ matrix.arch }}.tar.gz -C ./build images-${{ matrix.os }}-${{ matrix.arch }} .env errors init.sql

      - name: Create Release
        if: matrix.os == 'linux' && matrix.arch == 'amd64' # Ensure this step runs only once
        run: |
          response=$(curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PAT }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/releases \
            -d "{\"tag_name\": \"${GITHUB_REF_NAME}\", \"name\": \"Release ${GITHUB_REF_NAME}\", \"draft\": false, \"prerelease\": false}")
          echo "$response"
          RELEASE_ID=$(echo "$response" | jq -r '.id')
          echo "RELEASE_ID=${RELEASE_ID}" >> $GITHUB_ENV

      - name: Upload Release
        run: |
          curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PAT }}" \
            -H "Content-Type: application/octet-stream" \
            --data-binary @./build/images-${{ matrix.os }}-${{ matrix.arch }}.tar.gz \
            "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ env.RELEASE_ID }}/assets?name=images-${{ matrix.os }}-${{ matrix.arch }}.tar.gz"
